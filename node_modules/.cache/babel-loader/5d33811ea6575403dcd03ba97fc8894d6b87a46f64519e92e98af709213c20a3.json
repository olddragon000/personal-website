{"ast":null,"code":"var _jsxFileName = \"/Users/jialiangzhou/cs1300/portfolio/portfolio/src/components/projects/IterativeDesign/ProjectIterativeDesign.tsx\";\nimport { Box, ThemeProvider, Typography } from \"@mui/material\";\nimport introImg from \"./asset/intro-image.jpeg\";\nimport themeForProject from \"../../../themeForProject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectIterativeDesign() {\n  function importAll(r) {\n    // Use these line if you like to access arrays using an integer index.\n    let images = [];\n    r.keys().map((item, index) => {\n      images.push(r(item));\n    });\n\n    ////Use these line if you want to access each image using the file name.\n    //let images = {};\n    //r.keys().map((item, index) => { images[item.replace('./','')] = r(item); });\n\n    return images;\n  }\n  const sketches = importAll(require.context(\"./asset/sketches\", false, /\\.(png|jpe?g|svg)$/));\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: themeForProject,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"img\",\n        src: introImg,\n        alt: \"an image for the project: iterative design of Winno\",\n        sx: {\n          maxWidth: {\n            xs: \"90%\",\n            sm: \"80%\",\n            md: 600,\n            lg: 800\n          },\n          marginBottom: {\n            xs: 2,\n            sm: 5\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          maxWidth: {\n            xs: \"90%\",\n            sm: \"80%\",\n            md: 800,\n            lg: 1000\n          },\n          height: 500\n          // textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          children: \"Iterative Design: Winno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Collaborators: XXXX, XXXX, XXXX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          children: \"I. Sketching & Wireframing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Pre-Design Thinking: Introducing The Interface\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"For this project, our team decided to work on Winno, a mobile app designed to allow users to connect with experts to answer pressing questions with insight into different industries. Through this application, we address 2 key needs. First, users who want to learn want to connect with experts in different fields to answer pressing questions. Second, experts and creators want to own their audience and get paid directly by their top fans. Winno does just that. It allows users to discover experts and to schedule text sessions, and experts get paid for helping out and doing what they love.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Initial Sketches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          children: sketches.map(sketch => {\n            return /*#__PURE__*/_jsxDEV(Box, {\n              sx: {},\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: 200,\n                  height: 200\n                },\n                component: \"img\",\n                src: sketch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c = ProjectIterativeDesign;\nvar _c;\n$RefreshReg$(_c, \"ProjectIterativeDesign\");","map":{"version":3,"names":["Box","ThemeProvider","Typography","introImg","themeForProject","ProjectIterativeDesign","importAll","r","images","keys","map","item","index","push","sketches","require","context","display","flexDirection","alignItems","maxWidth","xs","sm","md","lg","marginBottom","height","sketch","width"],"sources":["/Users/jialiangzhou/cs1300/portfolio/portfolio/src/components/projects/IterativeDesign/ProjectIterativeDesign.tsx"],"sourcesContent":["import {Box, ThemeProvider, Typography} from \"@mui/material\";\nimport introImg from \"./asset/intro-image.jpeg\";\nimport themeForProject from \"../../../themeForProject\";\n\nexport default function ProjectIterativeDesign() {\n    function importAll(r: any) {\n\n        // Use these line if you like to access arrays using an integer index.\n        let images: any[] = [];\n        r.keys().map((item: any, index: any) => {\n            images.push(r(item));\n        });\n\n        ////Use these line if you want to access each image using the file name.\n        //let images = {};\n        //r.keys().map((item, index) => { images[item.replace('./','')] = r(item); });\n\n        return images;\n    }\n\n    const sketches = importAll(require.context(\"./asset/sketches\", false, /\\.(png|jpe?g|svg)$/));\n\n    return (\n        <ThemeProvider theme={themeForProject}>\n            <Box sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\"\n            }}>\n                <Box component={\"img\"} src={introImg}\n                     alt={\"an image for the project: iterative design of Winno\"}\n                     sx={{\n                         maxWidth: {\n                             xs: \"90%\",\n                             sm: \"80%\",\n                             md: 600,\n                             lg: 800\n                         },\n                         marginBottom: {\n                             xs: 2,\n                             sm: 5\n                         }\n                     }}/>\n                <Box sx={{\n                    maxWidth: {\n                        xs: \"90%\",\n                        sm: \"80%\",\n                        md: 800,\n                        lg: 1000\n                    },\n                    height: 500,\n                    // textAlign: \"left\"\n                }}>\n                    <Typography variant={\"h1\"}>\n                        Iterative Design: Winno\n                    </Typography>\n                    <Typography variant={\"subtitle1\"}>\n                        Collaborators: XXXX, XXXX, XXXX\n                    </Typography>\n\n                    <Typography variant={\"h2\"}>\n                        I. Sketching & Wireframing\n                    </Typography>\n                    <Typography variant={\"h3\"}>\n                        Pre-Design Thinking: Introducing The Interface\n                    </Typography>\n                    <Typography variant={\"body1\"}>\n                        For this project, our team decided to work on Winno, a\n                        mobile app designed to allow users to connect with\n                        experts to answer pressing questions with insight into\n                        different industries. Through this application, we\n                        address 2 key needs. First, users who want to learn want\n                        to connect with experts in different fields to answer\n                        pressing questions. Second, experts and creators want to\n                        own their audience and get paid directly by their top\n                        fans. Winno does just that. It allows users to discover\n                        experts and to schedule text sessions, and experts get\n                        paid for helping out and doing what they love.\n                    </Typography>\n\n                    <Typography variant={\"h3\"}>\n                        Initial Sketches\n                    </Typography>\n\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                        }}>\n                        {sketches.map((sketch) => {\n                            return (\n                                <Box sx={{\n                                }}>\n                                    <Box sx={{\n                                        width: 200,\n                                        height:200\n                                    }} component={\"img\"} src={sketch}/>\n                                </Box>\n\n                            )\n                        })}\n                    </Box>\n\n\n                </Box>\n            </Box>\n        </ThemeProvider>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}